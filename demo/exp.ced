module exp.

data prod (A : ★) (B : ★) : ★ =
  | pair : A ➔ B ➔ prod.

data bool : ★ =
  | true : bool
  | false : bool.

data exp : ★ ➔ ★ =
  | Const : ∀ T : ★ . T ➔ exp ·T
  | Pair : ∀ T1 : ★ . ∀ T2 : ★ . exp ·T1 ➔ exp ·T2 ➔ exp ·(prod ·T1 ·T2)
  | Eq : ∀ T : ★ . exp ·T ➔ exp ·T ➔ exp ·bool.

x = Const (Const true).

-- _ = λ x : ★ ➔ bool . x x.

𝒌x = Π x : (Π x' : ★. ★). ★.
