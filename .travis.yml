dist: bionic
language: minimal

services:
  - docker

cache:
  bundler: true
  directories:
    - coq-haskell
    - $HOME/docker

env:
  global:
    - NJOBS="2"
    - CONTRIB_NAME="coquedille"
  matrix:
    - COQ_IMAGE="pedroabreu0/coquedille:v3"

before_install:
  - |
    filename=$HOME/docker/saved_images.tar
    if [[ -f $filename ]]; then 
        docker load < $filename; 
    else 
        mkdir -p $HOME/docker
        docker pull ${COQ_IMAGE}
        docker save ${COQ_IMAGE} | gzip > $filename
    fi



install: |
  # Prepare the COQ container
  # docker pull ${COQ_IMAGE}
  docker run -d -i --init --name=COQ -v ${TRAVIS_BUILD_DIR}:/home/coq/${CONTRIB_NAME} -w /home/coq/${CONTRIB_NAME} ${COQ_IMAGE}
  docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '; set -ex
    eval \$(opam env)
    opam config list; opam repo list; opam list
    " install || exit 1

script:
  - echo -e "${ANSI_YELLOW}Building ${CONTRIB_NAME}...${ANSI_RESET}" && echo -en 'travis_fold:start:script\\r'
  - |
    docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '; set -ex
    echo "123456789" | sudo -S chown -R coq:coq /home/coq/${CONTRIB_NAME}
    ./init_repo.sh
    ( coq_makefile -f _CoqProject -o Makefile && make -j ${NJOBS} && make install && cd tests && ./run_tests.sh)
    " script || exit 1
    echo -en 'travis_fold:end:script\\r'

after_script:
  - docker stop COQ  # optional but recommended
