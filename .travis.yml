dist: bionic
language: minimal

services:
  - docker

cache:
  bundler: true
  directories:
    - coq-haskell
    - $HOME/docker

env:
  global:
    - NJOBS="2"
    - CONTRIB_NAME="coquedille"
  matrix:
    - COQ_IMAGE="pedroabreu0/coquedille:v2"

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

before_install:
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi


install: |
  # Prepare the COQ container
  docker pull ${COQ_IMAGE}
  docker run -d -i --init --name=COQ -v ${TRAVIS_BUILD_DIR}:/home/coq/${CONTRIB_NAME} -w /home/coq/${CONTRIB_NAME} ${COQ_IMAGE}
  docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '; set -ex
    eval \$(opam env)
    opam update -y
    opam config list; opam repo list; opam list
    " install || exit 1

script:
  - echo -e "${ANSI_YELLOW}Building ${CONTRIB_NAME}...${ANSI_RESET}" && echo -en 'travis_fold:start:script\\r'
  - |
    docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '; set -ex
    sudo chown -R coq:coq /home/coq/${CONTRIB_NAME}
    sudo chmod u+x init_repo.sh
    # eval \$(opam env)
    ./init_repo.sh
    ( coq_makefile -f _CoqProject -o Makefile && make -j ${NJOBS} && make install )
    ./tests/run_tests.sh
    " script || exit 1
    echo -en 'travis_fold:end:script\\r'

after_script:
  - docker stop COQ  # optional but recommended
