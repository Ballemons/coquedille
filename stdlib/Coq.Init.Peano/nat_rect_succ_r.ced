module test.
data nat : ★ =
  | O : nat
  | S : nat ➔ nat.

nat_ind : ∀ P : Π n : nat . ★ . Π f : P O . Π f' : Π n : nat . P n ➔ P (S n) . Π n : nat . P n = Λ P : Π n : nat . ★ . λ f : P O . λ f' : Π n : nat . P n ➔ P (S n) . λ n : nat . μ F. n @(λ n : nat . P n) {
  | O ➔ f 
  | S n' ➔ f' (to/nat -isType/F n') (F n') 
 }.

data eq (A : ★) (x : A) : A ➔ ★ =
  | eq_refl : eq x.

nat_rect : ∀ P : Π n : nat . ★ . Π f : P O . Π f' : Π n : nat . P n ➔ P (S n) . Π n : nat . P n = Λ P : Π n : nat . ★ . λ f : P O . λ f' : Π n : nat . P n ➔ P (S n) . λ n : nat . μ F. n @(λ n : nat . P n) {
  | O ➔ f 
  | S n' ➔ f' (to/nat -isType/F n') (F n') 
 }.

eq_ind : ∀ A : ★ . Π x : A . ∀ P : A ➔ ★ . Π f : P x . Π y : A . Π e : eq ·A x y . P y = Λ A : ★ . λ x : A . Λ P : A ➔ ★ . λ f : P x . λ y : A . λ e : eq ·A x y . σ e @(λ y' : A . λ _ : eq ·A x y' . P y') {
  | eq_refl ➔ f 
 }.

nat_rect_succ_r : ∀ A : ★ . Π f : A ➔ A . Π x : A . Π n : nat . eq ·A (nat_rect ·(λ n' : nat . A) x (λ n' : nat . f) (S n)) (nat_rect ·(λ n' : nat . A) (f x) (λ n' : nat . f) n) = Λ A : ★ . λ f : A ➔ A . λ x : A . λ n : nat . nat_ind ·(λ n' : nat . eq ·A (nat_rect ·(λ n' : nat . A) x (λ n' : nat . f) (S n')) (nat_rect ·(λ n' : nat . A) (f x) (λ n' : nat . f) n')) (eq_refl ·A (f x)) (λ n' : nat . λ IHn : eq ·A (nat_rect ·(λ n' : nat . A) x (λ n' : nat . f) (S n')) (nat_rect ·(λ n' : nat . A) (f x) (λ n' : nat . f) n') . eq_ind ·A (nat_rect ·(λ n' : nat . A) x (λ n' : nat . f) (S n')) ·(λ a : A . eq ·A (f (f (nat_rect ·(λ n' : nat . A) x (λ n' : nat . f) n'))) (f a)) (eq_refl ·A (f (nat_rect ·(λ n' : nat . A) x (λ n' : nat . f) (S n')))) (nat_rect ·(λ n' : nat . A) (f x) (λ n' : nat . f) n') IHn) n.


