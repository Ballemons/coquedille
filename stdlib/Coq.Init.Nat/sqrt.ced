module test.
data nat : ★ =
  | O : nat
  | S : nat ➔ nat.

sqrt_iter : Π k : nat . Π p : nat . Π q : nat . Π r : nat . nat = λ k : nat . λ p : nat . λ q : nat . λ r : nat . μ sqrt_iter. k @(λ k : nat . Π p : nat . Π q : nat . Π r : nat . nat) {
  | O ➔ λ _ . λ _ . λ _ . p 
  | S k' ➔ λ _ . λ _ . λ _ . σ r @(λ r' : nat . nat) {
  | O ➔ sqrt_iter k' (S p) (S (S q)) (S (S q)) 
  | S r' ➔ sqrt_iter k' p q r' 
 } 
 } p q r.

sqrt : Π n : nat . nat = λ n : nat . sqrt_iter n O O O.


