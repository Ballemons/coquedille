module test.
data list (A : ★) : ★ =
  | nil : list
  | cons : A ➔ list ➔ list.

fold_right : ∀ A : ★ . ∀ B : ★ . Π f : B ➔ A ➔ A . Π a0 : A . Π l : list ·B . A = Λ A : ★ . Λ B : ★ . λ f : B ➔ A ➔ A . λ a0 : A . λ l : list ·B . μ fold_right. l @(λ l : list ·B . A) {
  | nil ➔ a0 
  | cons b t ➔ f b (fold_right t) 
 }.


