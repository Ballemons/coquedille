module test.
data bool : ★ =
  | true : bool
  | false : bool.

data list (A : ★) : ★ =
  | nil : list
  | cons : A ➔ list ➔ list.

filter : ∀ A : ★ . Π f : A ➔ bool . Π l : list ·A . list ·A = Λ A : ★ . λ f : A ➔ bool . λ l : list ·A . μ filter. l @(λ l : list ·A . list ·A) {
  | nil ➔ nil ·A 
  | cons x l' ➔ σ f x @(λ _ : bool . list ·A) {
  | true ➔ cons ·A x (filter l') 
  | false ➔ filter l' 
 } 
 }.


