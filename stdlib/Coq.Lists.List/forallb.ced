module test.
data bool : ★ =
  | true : bool
  | false : bool.

data list (A : ★) : ★ =
  | nil : list
  | cons : A ➔ list ➔ list.

andb : Π b1 : bool . Π b2 : bool . bool = λ b1 : bool . λ b2 : bool . σ b1 @(λ b1' : bool . bool) {
  | true ➔ b2 
  | false ➔ false 
 }.

forallb : ∀ A : ★ . Π f : A ➔ bool . Π l : list ·A . bool = Λ A : ★ . λ f : A ➔ bool . λ l : list ·A . μ forallb. l @(λ l : list ·A . bool) {
  | nil ➔ true 
  | cons a l' ➔ andb (f a) (forallb l') 
 }.


