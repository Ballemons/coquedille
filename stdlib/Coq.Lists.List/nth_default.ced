module test.
data list (A : ★) : ★ =
  | nil : list
  | cons : A ➔ list ➔ list.

data nat : ★ =
  | O : nat
  | S : nat ➔ nat.

data option (A : ★) : ★ =
  | Some : A ➔ option
  | None : option.

nth_error : ∀ A : ★ . Π l : list ·A . Π n : nat . option ·A = Λ A : ★ . λ l : list ·A . λ n : nat . μ nth_error. n @(λ n : nat . Π l : list ·A . option ·A) {
  | O ➔ λ _ . σ l @(λ l' : list ·A . option ·A) {
  | nil ➔ None ·A 
  | cons x l0 ➔ Some ·A x 
 } 
  | S n' ➔ λ _ . σ l @(λ l' : list ·A . option ·A) {
  | nil ➔ None ·A 
  | cons a l' ➔ nth_error n' l' 
 } 
 } l.

nth_default : ∀ A : ★ . Π default : A . Π l : list ·A . Π n : nat . A = Λ A : ★ . λ default : A . λ l : list ·A . λ n : nat . σ nth_error ·A l n @(λ x : option ·A . A) {
  | Some x ➔ x 
  | None ➔ default 
 }.


