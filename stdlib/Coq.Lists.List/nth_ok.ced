module test.
data nat : ★ =
  | O : nat
  | S : nat ➔ nat.

data list (A : ★) : ★ =
  | nil : list
  | cons : A ➔ list ➔ list.

data bool : ★ =
  | true : bool
  | false : bool.

nth_ok : ∀ A : ★ . Π n : nat . Π l : list ·A . Π default : A . bool = Λ A : ★ . λ n : nat . λ l : list ·A . λ default : A . σ n @(λ n' : nat . bool) {
  | O ➔ μ nth_ok. l @(λ l : list ·A . Π n : nat . Π default : A . bool) {
  | nil ➔ λ _ . λ _ . false 
  | cons x l' ➔ λ _ . λ _ . true 
 } n default 
  | S m ➔ μ nth_ok. l @(λ l : list ·A . Π n : nat . Π default : A . bool) {
  | nil ➔ λ _ . λ _ . false 
  | cons x t ➔ λ _ . λ _ . nth_ok t m default 
 } n default 
 }.


